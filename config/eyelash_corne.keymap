#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&trans  &kp Q       &kp W           &kp E             &kp R            &kp T                                            &kp UP                &kp Y            &kp U        &kp I         &kp O            &kp P               &trans
&td0    &mt LGUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F      &kp G                                  &kp LEFT  &kp ENTER  &kp RIGHT  &kp H            &mt LCTRL J  &mt RSHIFT K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &trans
&trans  &kp Z       &kp X           &kp C             &kp V            &kp B                    &kp C_MUTE              &kp DOWN              &kp N            &kp M        &kp COMMA     &kp DOT          &kp FSLH            &trans
                                    &kp LEFT_ALT      &lt 1 BACKSPACE  &mt LEFT_CONTROL DELETE                                                &mt RCTRL ENTER  &lt 2 SPACE  &mt RALT TAB
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp F1  &kp F2                 &kp F3                 &kp F4                   &kp F5                     &kp F6                                &mmv MOVE_UP                     &kp F7           &kp F8           &kp F9             &kp F10           &kp F11           &kp F12
&trans  &mt LEFT_GUI NUMBER_1  &mt LEFT_ALT NUMBER_2  &mt LEFT_SHIFT NUMBER_3  &mt LEFT_CONTROL NUMBER_4  &kp N5                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6     &mt RCTRL N7     &mt LEFT_SHIFT N8  &mt RIGHT_ALT N9  &mt RIGHT_GUI N9  &trans
&trans  &kp ESCAPE             &kp GRAVE              &kp BACKSLASH            &trans                     &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI    &rgb_ug RGB_BRD   &kp END           &trans
                                                      &trans                   &trans                     &trans                                                                 &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
